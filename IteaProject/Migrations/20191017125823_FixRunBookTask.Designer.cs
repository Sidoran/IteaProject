// <auto-generated />
using System;
using IteaProject.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IteaProject.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20191017125823_FixRunBookTask")]
    partial class FixRunBookTask
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IteaProject.Models.Entities.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken");

                    b.Property<string>("IpAddress");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("IteaProject.Models.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgentId");

                    b.Property<DateTime>("EventDate");

                    b.Property<string>("EventText");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("IteaProject.Models.Entities.RunBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime>("WhenChanged");

                    b.Property<DateTime>("WhenCreated");

                    b.HasKey("Id");

                    b.ToTable("RunBooks");
                });

            modelBuilder.Entity("IteaProject.Models.Entities.RunTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int?>("RunBookId");

                    b.Property<int>("RunbookOrder");

                    b.Property<DateTime>("WhenChanged");

                    b.Property<DateTime>("WhenCreated");

                    b.HasKey("Id");

                    b.HasIndex("RunBookId");

                    b.ToTable("RunTasks");
                });

            modelBuilder.Entity("IteaProject.Models.Entities.Event", b =>
                {
                    b.HasOne("IteaProject.Models.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId");
                });

            modelBuilder.Entity("IteaProject.Models.Entities.RunTask", b =>
                {
                    b.HasOne("IteaProject.Models.Entities.RunBook", "RunBook")
                        .WithMany("Tasks")
                        .HasForeignKey("RunBookId");
                });
#pragma warning restore 612, 618
        }
    }
}
